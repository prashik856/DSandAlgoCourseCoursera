Hashing Integers

Build a Universal Family!

Example:
Take phone numbers up to lentgh 7, for example 148-25067
Convert phone numbers to integers from
0 to 10^7 -1 = 9 999 999
Choose prime number bigger than 10^7
e.g. p = 10 000 019
Choose hash table size, e.g. m = 1 000

Hashing Integers:
Lemma:
Hp = {hp(a,b)(x) = ((ax + b) mod p) mod m}
for all a,b: 1 <= a <= p-1, 0<=b<=p-1
is a universal family.
p is the prime number that we choose
a,b are different for different hash functions.
Basically, when we choose a and b, we choose a hash function.
x is the key. (The input integer.)
And x < p.
There are p-1 variants for a, and p variants of b.
So, there are p(p-1) number of Universal hash functions possible.

For example:
select a = 34, b = 2, so h = hp(34,2) and consider x = 1 482 567 corresponding to phone numbers 
148-25-67. p = 10 000 019
(34 * x + 2)%p = 407185
407185 % m = 185
So h(x) = 185


General Case:
Define maximum length L of a phone number:
Conver phone numbers to integers from 0 to 10^L -1
Choose prime number p > 10^L
Choose random hash function from Universal family Hp (choose random a = [1,p-1], b = [0,p-1])
